# This default action priority list is automatically created based on your character.
# It is a attempt to provide you with a action list that is both simple and practicable,
# while resulting in a meaningful and good simulation. It may not result in the absolutely highest possible dps.
# Feel free to edit, adapt and improve it to your own needs.
# SimulationCraft is always looking for updates and improvements to the default action lists.

# Executed before combat begins. Accepts non-harmful actions only.
actions.precombat=flask
actions.precombat+=/food
actions.precombat+=/augmentation
# Snapshot raid buffed stats before combat begins and pre-potting is done.
actions.precombat+=/snapshot_stats
actions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_buff.intellect|trinket.1.has_buff.mastery|trinket.1.has_buff.versatility|trinket.1.has_buff.haste|trinket.1.has_buff.crit
actions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_buff.intellect|trinket.2.has_buff.mastery|trinket.2.has_buff.versatility|trinket.2.has_buff.haste|trinket.2.has_buff.crit
# Decide which trinket to pair with Dragonrage, prefer 2 minute and 1 minute trinkets
actions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.dragonrage.duration=0|cooldown.dragonrage.duration%%trinket.1.cooldown.duration=0)
actions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.dragonrage.duration=0|cooldown.dragonrage.duration%%trinket.2.cooldown.duration=0)
# Estimates a trinkets value by comparing the cooldown of the trinket, divided by the duration of the buff it provides. Has a intellect modifier (currently 1.5x) to give a higher priority to intellect trinkets. The intellect modifier should be changed as intellect priority increases or decreases. As well as a modifier for if a trinket will or will not sync with cooldowns.
actions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.spoils_of_neltharus
actions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.spoils_of_neltharus
actions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell|trinket.1.is.whispering_incarnate_icon
actions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell|trinket.2.is.whispering_incarnate_icon
actions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs|variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.intellect)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.intellect)*(variable.trinket_1_sync))
# Rank 1 empower spell cast time TODO: multiplier should be 1.0 but 1.3 results in more dps for EBF builds
actions.precombat+=/variable,name=r1_cast_time,value=1.3*spell_haste
actions.precombat+=/variable,name=has_external_pi,value=cooldown.invoke_power_infusion_0.duration>0
actions.precombat+=/use_item,name=shadowed_orb_of_torment
actions.precombat+=/firestorm,if=talent.firestorm
actions.precombat+=/living_flame,if=!talent.firestorm

# Executed every time the actor is available.
actions=potion,if=buff.dragonrage.up|fight_remains<35
# Variable that evaluates when next dragonrage is by working out the maximum between the dragonrage cd and your empowers, ignoring CDR effect estimates.
actions+=/variable,name=next_dragonrage,value=cooldown.dragonrage.remains<?(cooldown.eternity_surge.remains-2*gcd.max)<?(cooldown.fire_breath.remains-gcd.max)
# Invoke External Power Infusions if they're available during dragonrage
actions+=/invoke_external_buff,name=power_infusion,if=buff.dragonrage.up&!buff.power_infusion.up
actions+=/living_flame,if=(raid_event.movement.in<2)&spell_targets.pyre<=2&!buff.hover.up&cooldown.hover.ready&buff.burnout.up&(buff.leaping_flames.up&!buff.essence_burst.up|!buff.leaping_flames.up&buff.essence_burst.stack<buff.essence_burst.max_stack)
actions+=/azure_strike,if=(raid_event.movement.in<2)&spell_targets.pyre<=2&!buff.hover.up&cooldown.hover.ready
actions+=/hover,use_off_gcd=1,if=(raid_event.movement.in<2)&spell_targets.pyre<=2&!buff.hover.up
actions+=/call_action_list,name=trinkets
actions+=/run_action_list,name=aoe,if=spell_targets.pyre>=3
actions+=/run_action_list,name=st

# AOE action list; Actually kinda clean now
# TODO: Deep Breath logic needs some work, Imminent defo bugged in sim rn, so it will have to wait
#actions.aoe=deep_breath,if=talent.imminent_destruction
# Send DR on CD with no regard to the safety of the mobs - DPS loss to hold DR for empowers, in real world scenario maybe you hold if you are going for longer DRs
actions.aoe=dragonrage
# Variables for AoE / Testing
# This variable controls when you should start holding empowers for upcoming DR. - From my testing 4sec seems like the sweetspot, but it's very minor diff so far - Holding for more than 6 seconds it begins to become a loss.
actions.aoe+=/variable,name=dr_prep_time_aoe,value=4
# Use tip to get that sweet aggro
actions.aoe+=/tip_the_scales,if=buff.dragonrage.up&(spell_targets.pyre<=6|!cooldown.fire_breath.up)
# Cast Fire Breath
actions.aoe+=/call_action_list,name=fb,if=(!talent.dragonrage|variable.next_dragonrage>variable.dr_prep_time_aoe|!talent.animosity)&(buff.blazing_shards.remains<variable.r1_cast_time|buff.dragonrage.up)
# Cast Eternity Surge
actions.aoe+=/call_action_list,name=es,if=buff.dragonrage.up|!talent.dragonrage|(cooldown.dragonrage.remains>variable.dr_prep_time_aoe&buff.blazing_shards.remains<variable.r1_cast_time)
# Cast DB if not in DR and not running imminent destruction. - I'm assuming that casting DB inside of DR with imminent before you start spending should be an increase, but might be worth to save it for outside of DR for more value?
actions.aoe+=/deep_breath,if=!buff.dragonrage.up
#actions.aoe+=/deep_breath,if=!buff.dragonrage.up&!talent.imminent_destruction
# Send SS when it doesn't overflow EB, without vigor send on CD
actions.aoe+=/shattering_star,if=buff.essence_burst.stack<buff.essence_burst.max_stack|!talent.arcane_vigor
# Cast Firestorm before spending ressources
actions.aoe+=/firestorm
# Pyre logic with volatility.
# Pyre on 3T, currently a small gain (0.1%) to play around blue buff in 3T so including that
actions.aoe+=/pyre,if=talent.volatility&(spell_targets.pyre>=4|(!buff.iridescence_blue.up&spell_targets.pyre==3))
# Cast LF with burnout proc and leaping flames up as long as you have 0 EB
actions.aoe+=/living_flame,if=buff.burnout.up&buff.leaping_flames.up&!buff.essence_burst.up&essence<essence.max-1
# Pyre logic without volatility.
# Without Vola use pyre if raging debuff is active, or if on 3T with 3 stacks of CB, or if 4T+
actions.aoe+=/pyre,if=(talent.raging_inferno&debuff.in_firestorm.up)|(spell_targets.pyre==3&buff.charged_blast.stack>=3)|spell_targets.pyre>=4
# Use staff on 5T or below
actions.aoe+=/use_item,name=kharnalex_the_first_light,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down&spell_targets.pyre<=5
# Yoinked the disintegrate logic from ST
actions.aoe+=/disintegrate,chain=1,early_chain_if=(evoker.use_early_chaining&(buff.dragonrage.up|essence.deficit<=1)&ticks>=2)&(raid_event.movement.in>2|buff.hover.up),interrupt_if=(buff.dragonrage.up&ticks>=3&(cooldown.shattering_star.up|(buff.burnout.up&buff.essence_burst.stack<buff.essence_burst.max_stack&essence<essence.max-1)|cooldown.fire_breath.up|cooldown.eternity_surge.up))&(raid_event.movement.in>2|buff.hover.up),if=(buff.dragonrage.up|(!talent.shattering_star|cooldown.shattering_star.remains>6|essence.deficit<=1|buff.essence_burst.stack==buff.essence_burst.max_stack))&(raid_event.movement.in>2|buff.hover.up)
# Cast LF with burnout and snapfire(kekW) proc for those juicy insta firestorms
actions.aoe+=/living_flame,if=talent.snapfire&buff.burnout.up
# Fallback filler
actions.aoe+=/azure_strike

# Eternity Surge, use rank most applicable to targets.
actions.es=eternity_surge,empower_to=1,if=spell_targets.pyre<=1+talent.eternitys_span|buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste|buff.dragonrage.up&(spell_targets.pyre==5|spell_targets.pyre>=8)
actions.es+=/eternity_surge,empower_to=2,if=spell_targets.pyre<=2+2*talent.eternitys_span|buff.dragonrage.remains<2.5*spell_haste&buff.dragonrage.remains>=1.75*spell_haste
actions.es+=/eternity_surge,empower_to=3,if=spell_targets.pyre<=3+3*talent.eternitys_span|!talent.font_of_magic|buff.dragonrage.remains<=3.25*spell_haste&buff.dragonrage.remains>=2.5*spell_haste
actions.es+=/eternity_surge,empower_to=4

# Fire Breath, use rank appropriate to target count/talents.
actions.fb=fire_breath,empower_to=1,if=(buff.dragonrage.up&spell_targets.pyre<=2)|(spell_targets.pyre=1&!talent.everburning_flame)|(buff.dragonrage.remains<1.75*spell_haste&buff.dragonrage.remains>=1*spell_haste)
actions.fb+=/fire_breath,empower_to=2,if=(!debuff.in_firestorm.up&talent.everburning_flame&spell_targets.pyre<=3)|(spell_targets.pyre=2&!talent.everburning_flame)|(buff.dragonrage.remains<2.5*spell_haste&buff.dragonrage.remains>=1.75*spell_haste)
actions.fb+=/fire_breath,empower_to=3,if=!talent.font_of_magic|spell_targets.pyre<=2|(debuff.in_firestorm.up&talent.everburning_flame&spell_targets.pyre<=3)|(buff.dragonrage.remains<=3.25*spell_haste&buff.dragonrage.remains>=2.5*spell_haste)
actions.fb+=/fire_breath,empower_to=4

# ST Action List, it's a mess, but it's getting better!
actions.st=use_item,name=kharnalex_the_first_light,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down
# Variable for when to start holding empowers.
actions.st+=/variable,name=dr_prep_time_st,value=13
# Relaxed Dragonrage Entry Requirements, cannot reliably reach third extend under normal conditions (Bloodlust + Power Infusion/Very high haste gear)
actions.st+=/dragonrage,if=cooldown.fire_breath.remains<4&cooldown.eternity_surge.remains<10|fight_remains<30
actions.st+=/call_action_list,name=fb,if=(!talent.dragonrage|variable.next_dragonrage>variable.dr_prep_time_st|!talent.animosity)&(buff.blazing_shards.remains<variable.r1_cast_time|buff.dragonrage.up)
# Throw Star on CD, Don't overcap with Arcane Vigor.
actions.st+=/shattering_star,if=buff.essence_burst.stack<buff.essence_burst.max_stack|!talent.arcane_vigor
# Tip Eternity Surge in DR For more DPS by shortening the cast
actions.st+=/tip_the_scales,if=buff.dragonrage.up&cooldown.eternity_surge.up&!cooldown.fire_breath.up
actions.st+=/call_action_list,name=es,if=(!talent.dragonrage|variable.next_dragonrage>13|!talent.animosity)&(buff.blazing_shards.remains<variable.r1_cast_time|buff.dragonrage.up)
# Wait for FB/ES to be ready if spending another GCD would result in the cast no longer fitting inside of DR
actions.st+=/wait,sec=cooldown.fire_breath.remains,if=talent.animosity&buff.dragonrage.up&buff.dragonrage.remains<gcd.max+variable.r1_cast_time*buff.tip_the_scales.down&buff.dragonrage.remains-cooldown.fire_breath.remains>=variable.r1_cast_time*buff.tip_the_scales.down
actions.st+=/wait,sec=cooldown.eternity_surge.remains,if=talent.animosity&buff.dragonrage.up&buff.dragonrage.remains<gcd.max+variable.r1_cast_time&buff.dragonrage.remains-cooldown.eternity_surge.remains>variable.r1_cast_time*buff.tip_the_scales.down
# Spend the last 1 or 2 GCDs of DR on fillers to exit with 2 EBs
actions.st+=/living_flame,if=buff.dragonrage.up&buff.dragonrage.remains<(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max&buff.burnout.up
actions.st+=/azure_strike,if=buff.dragonrage.up&buff.dragonrage.remains<(buff.essence_burst.max_stack-buff.essence_burst.stack)*gcd.max
# Spend burnout procs without overcapping resources
actions.st+=/living_flame,if=buff.burnout.up&(buff.leaping_flames.up&!buff.essence_burst.up|!buff.leaping_flames.up&buff.essence_burst.stack<buff.essence_burst.max_stack)&essence<essence.max-1 
# In DR or if overflowing chain after the 3rd damage tick. Clip after third tick in dragonrage for more important buttons. Will only cast if >2s till movement
actions.st+=/disintegrate,chain=1,early_chain_if=(evoker.use_early_chaining&(buff.dragonrage.up|essence.deficit<=1)&ticks>=2)&(raid_event.movement.in>2|buff.hover.up),interrupt_if=(buff.dragonrage.up&ticks>=3&(cooldown.shattering_star.up|(buff.burnout.up&buff.essence_burst.stack<buff.essence_burst.max_stack&essence<essence.max-1)|cooldown.fire_breath.up|cooldown.eternity_surge.up))&(raid_event.movement.in>2|buff.hover.up),if=(buff.dragonrage.up|(!talent.shattering_star|cooldown.shattering_star.remains>6|essence.deficit<=1|buff.essence_burst.stack==buff.essence_burst.max_stack))&(raid_event.movement.in>2|buff.hover.up)
# Hard cast only outside of SS and DR windows, always spend snapfire procs
actions.st+=/firestorm,if=!buff.dragonrage.up&debuff.shattering_star_debuff.down|buff.snapfire.up
actions.st+=/deep_breath,if=!buff.dragonrage.up&(spell_targets.deep_breath>1|talent.imminent_destruction&!debuff.shattering_star_debuff.up)
actions.st+=/living_flame
# Fallback for movement
actions.st+=/azure_strike

# Use spoils with DR, unsure how to remove the manual thing without breaking everything, so just doing this dirty hack :>
actions.trinkets=use_item,name=spoils_of_neltharus,if=buff.dragonrage.up|fight_remains<=20
# The trinket with the highest estimated value, will be used first and paired with Dragonrage.
actions.trinkets+=/use_item,slot=trinket1,if=buff.dragonrage.up&(!trinket.2.has_cooldown|trinket.2.cooldown.remains|variable.trinket_priority=1|variable.trinket_2_exclude)&!variable.trinket_1_manual|trinket.1.proc.any_dps.duration>=fight_remains|trinket.1.cooldown.duration<=60&(variable.next_dragonrage>20|!talent.dragonrage)&(!buff.dragonrage.up|variable.trinket_priority=1)
actions.trinkets+=/use_item,slot=trinket2,if=buff.dragonrage.up&(!trinket.1.has_cooldown|trinket.1.cooldown.remains|variable.trinket_priority=2|variable.trinket_1_exclude)&!variable.trinket_2_manual|trinket.2.proc.any_dps.duration>=fight_remains|trinket.2.cooldown.duration<=60&(variable.next_dragonrage>20|!talent.dragonrage)&(!buff.dragonrage.up|variable.trinket_priority=2)
# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.
actions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.2.cooldown.remains|!variable.trinket_2_buffs)&(variable.next_dragonrage>20|!talent.dragonrage)&!variable.trinket_1_manual
actions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.1.cooldown.remains|!variable.trinket_1_buffs)&(variable.next_dragonrage>20|!talent.dragonrage)&!variable.trinket_2_manual
